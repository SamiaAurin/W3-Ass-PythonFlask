openapi: 3.0.0
info:
  title: Travel API - Destination Service
  description: API for managing travel destinations (viewing and deleting destinations)
  version: 1.0.0
  contact:
    name: API Support
    url: https://www.example.com/support
    email: support@example.com

servers:
  - url: http://localhost:5002
    description: Local server

paths:
  /destinations:
    get:
      summary: Retrieve a list of all travel destinations
      operationId: getDestinations
      tags:
        - Destinations
      responses:
        '200':
          description: A list of travel destinations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Paris
                    description:
                      type: string
                      example: The City of Light
                    location:
                      type: string
                      example: France
    post:
      summary: Add a new destination (Admin-only)
      operationId: addDestination
      tags:
        - Destinations
      responses:
        '201':
          description: Destination added successfully
        '403':
          description: Unauthorized. Admin role required.
          
  /destinations/{id}:
    delete:
      summary: Delete a specific travel destination
      operationId: deleteDestination
      tags:
        - Destinations
      parameters:
        - name: id
          in: path
          description: The ID of the destination to delete
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Destination deleted successfully
        '404':
          description: Destination not found
        '403':
          description: Unauthorized. Admin role required.

security:
  - bearerAuth: []
  
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
